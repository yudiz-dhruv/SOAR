/* eslint-disable no-unused-vars */
import React, { useState } from 'react'
import Wrapper from '../../Shared/Wrapper'
import { BottomNavigation, BottomNavigationAction, Divider, Grid } from '@mui/material'
import ReactApexChart from 'react-apexcharts'
import Navbar from '../../Shared/Navbar'
import Sidebar from '../../Shared/Sidebar'
import ChartDetail from '../ChartDetail'

const VulnerabilityDashboard = () => {
  const [showdetails, setShowDetails] = useState(false)

  var RadialBarOptions = {
    series: [75, 40, 30],
    chart: {
      height: 350,
      type: 'radialBar'
    },
    plotOptions: {
      radialBar: {
        // removing background of stroke
        track: {
          background: 'transparent',
          strokeWidth: '90%',
          opacity: 1,
          margin: 8
        },
        hollow: {
          size: '50%',
          margin: 1
        },
        dataLabels: {
          name: {
            fontSize: '22px'
          },
          value: {
            fontSize: '16px'
          },
          total: {
            show: true,
            label: '100 Severity',
            color: '#fff',
            formatter: function (w) {
              // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function
              return ''
            }
          }
        }
      }
    },
    labels: ['LOW-55', 'MEDIUM-30', 'HIGH-15'],
    colors: ['#F0B05D', '#68C2DF', '#EC726E'],
    stroke: {
      show: true,
      lineCap: 'round'
    },
    responsive: [
      {
        breakpoint: 1900,
        options: {
          chart: {
            width: 380,
            height: 260
          },
          plotOptions: {
            radialBar: {
              // removing background of stroke
              track: {
                background: 'transparent',
                strokeWidth: '50%',
                opacity: 1,
                margin: 8
              },
              hollow: {
                size: '40%',
                margin: 1
              },
              dataLabels: {
                name: {
                  fontSize: '15px'
                },
                value: {
                  fontSize: '15px'
                }
              }
            }
          }
        }
      },
      {
        breakpoint: 1500,
        options: {
          chart: {
            width: 300,
            height: 260
          },
          plotOptions: {
            radialBar: {
              // removing background of stroke
              track: {
                background: 'transparent',
                strokeWidth: '50%',
                opacity: 1,
                margin: 8
              },
              hollow: {
                size: '40%',
                margin: 1
              },
              dataLabels: {
                name: {
                  fontSize: '15px'
                },
                value: {
                  fontSize: '15px'
                }
              }
            }
          }
        }
      }
    ]
  }

  const StackedBarOptions = {
    series: [
      {
        name: 'HIGH',
        data: [44, 55, 41, 37, 22, 43, 21, 20, 20, 20],
        color: '#EC726E'
      },
      {
        name: 'MEDIUM',
        data: [44, 55, 41, 37, 22, 43, 21, 20, 20, 20],
        color: '#68C2DF'
      },
      {
        name: 'LOW',
        data: [44, 55, 41, 37, 22, 43, 21, 20, 20, 20],
        color: '#F0B05D'
      }
    ],
    chart: {
      type: 'bar',
      height: 350,
      stacked: true
    },
    plotOptions: {
      bar: {
        horizontal: true,
        barHeight: '50%'
        // dataLabels: {
        //   total: {
        //     enabled: true,
        //     offsetX: 0,
        //     style: {
        //       color: '#fff',
        //       display: 'none',
        //       fontSize: '13px',
        //       fontWeight: 900
        //     }
        //   }
        // }
      }
    },
    dataLabels: {
      enabled: false
    },
    stroke: {
      width: 0.5,
      colors: ['#fff']
    },
    // title: {
    //   text: 'Fiction Books Sales'
    // },
    responsive: [
      {
        breakpoint: 1900,
        options: {
          chart: {
            width: 570,
            height: 300
          },
          plotOptions: {
            bar: {
              horizontal: true,
              barHeight: '40%'
            }
          }
        }
      },
      {
        breakpoint: 1500,
        options: {
          chart: {
            width: 440,
            height: 280
          },
          plotOptions: {
            bar: {
              horizontal: true,
              barHeight: '40%'
            }
          }
        }
      }
    ],
    xaxis: {
      title: {
        text: 'No of Vulnerability',
        style: {
          color: '#fff'
        }
      },
      categories: [
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01'
      ],
      labels: {
        formatter: function (val) {
          return val + 'K'
        },
        style: {
          colors: ['#fff']
        }
      }
    },
    yaxis: {
      title: {
        text: undefined
      },
      labels: {
        formatter: function (val) {
          return val
        },
        style: {
          colors: ['#fff']
        }
      }
    },
    tooltip: {
      y: {
        formatter: function (val) {
          return val + 'K'
        }
      }
    },
    fill: {
      opacity: 1,
      type: 'solid'
    },
    legend: {
      position: 'top',
      horizontalAlign: 'right',
      floating: true,
      offsetX: -20,
      offsetY: 0,
      markers: {
        radius: 15
      },
      labels: {
        colors: ['#fff']
      }
    },
    grid: {
      show: true,
      position: 'back',
      borderColor: '#9e9e9e',
      xaxis: {
        lines: {
          show: true
        }
      }
    }
  }

  const LineWithDataLabel = {
    series: [
      {
        name: 'HIGH',
        data: [0, 12, 3, 29, 6, 13, 10, 8, 14, 26]
      },
      {
        name: 'MEDIUM',
        data: [0, 10, 16, 13, 12, 32, 15, 18, 25, 36]
      },
      {
        name: 'LOW',
        data: [0, 16, 23, 21, 16, 24, 28, 25, 35, 40]
      }
    ],
    markers: {
      size: [7, 7, 7],
      // colors: ['#EC726E', '#68C2DF', '#F0B05D'],
      shape: 'circle',
      strokeColors: ['#EC726E', '#68C2DF', '#F0B05D'],
      showNullDataPoints: true,
      hover: {
        size: 8,
        sizeOffset: 7
      }
    },
    chart: {
      height: 350,
      type: 'line',
      dropShadow: {
        enabled: true,
        color: '#000',
        top: 8,
        left: 5,
        blur: 5,
        opacity: 0.5
      },
      toolbar: {
        show: false
      }
    },
    colors: ['#EC726E', '#68C2DF', '#F0B05D'],
    dataLabels: {
      enabled: false
    },
    stroke: {
      show: true,
      width: 5,
      curve: 'smooth'
    },
    title: {
      text: 'Port Wise Vulnerability',
      style: {
        color: '#fff'
      },
      align: 'left'
    },
    grid: {
      show: true,
      position: 'back',
      borderColor: '#9e9e9e',
      xaxis: {
        lines: {
          show: true
        }
      },
      yaxis: {
        lines: {
          show: true
        }
      },
      row: {
        colors: ['none', 'none', 'none'], // takes an array which will be repeated on columns
        opacity: 1
      }
    },
    xaxis: {
      categories: [
        '29/05/2023',
        '28/05/2023',
        '27/05/2023',
        '26/05/2023',
        '25/05/2023',
        '24/05/2023',
        '23/05/2023',
        '22/05/2023',
        '21/05/2023',
        '20/05/2023'
      ],
      labels: {
        style: {
          colors: ['#fff', '#fff', '#fff', '#fff', '#fff', '#fff', '#fff', '#fff', '#fff', '#fff']
        }
      }
    },
    yaxis: {
      min: 0,
      max: 48,
      labels: {
        style: {
          colors: ['#fff', '#fff', '#fff', '#fff', '#fff', '#fff', '#fff', '#fff', '#fff', '#fff']
        }
      }
    },
    legend: {
      position: 'top',
      horizontalAlign: 'right',
      floating: true,
      offsetY: -25,
      offsetX: -5,
      markers: {
        radius: 15
      },
      labels: {
        colors: ['#fff']
      }
    },
    fill: {
      opacity: 1
    },
    responsive: [
      {
        breakpoint: 1900,
        options: {
          chart: {
            width: 570,
            height: 300
          },
          stroke: {
            show: true,
            width: 5,
            curve: 'smooth'
          },
          markers: {
            size: [5, 5, 5],
            // colors: ['#EC726E', '#68C2DF', '#F0B05D'],
            shape: 'circle',
            strokeColors: ['#EC726E', '#68C2DF', '#F0B05D'],
            showNullDataPoints: true,
            hover: {
              size: 6,
              sizeOffset: 6
            }
          }
        }
      },
      {
        breakpoint: 1500,
        options: {
          chart: {
            width: 430,
            height: 300
          },
          stroke: {
            show: true,
            width: 4,
            curve: 'smooth'
          },
          markers: {
            size: [5, 5, 5],
            // colors: ['#EC726E', '#68C2DF', '#F0B05D'],
            shape: 'circle',
            strokeColors: ['#EC726E', '#68C2DF', '#F0B05D'],
            showNullDataPoints: true,
            hover: {
              size: 6,
              sizeOffset: 6
            }
          }
        }
      }
    ]
  }

  const PieChart = {
    series: [23, 25, 22, 25, 21, 17, 15, 25, 13, 25],
    colors: ['#DB5DF0', '#5D86F0', '#5DF06C', '#EC726E', '#F0B05D', '#9FCFBF', '#195887', '#8C5DF0', '#5DF0CD', '#F0E15D'],
    chart: {
      width: 200,
      type: 'pie'
    },
    stroke: {
      width: 1,
      colors: ['#fff']
    },
    fill: {
      opacity: 1
    },
    responsive: [
      {
        breakpoint: 1500,
        options: {
          chart: {
            width: 300,
            height: 300
          },
          legend: {
            position: 'bottom',
            fontSize: '10px'
          }
        }
      },
      {
        breakpoint: 480,
        options: {
          chart: {
            width: 200
          },
          legend: {
            position: 'bottom'
          }
        }
      }
    ],
    labels: [
      '22/tcp (ANA: ssn)',
      'BO/icp (ANA: www-hitp)',
      '8443/1 (ANA: posync-hitps)',
      '43/1 (ANA: hitps)',
      'oenerallCPE-T',
      'oenerallCPE-T',
      'oenerallCPE-T',
      '3128/1cp (ANA: ndl-aas)',
      '23tcp (ANA: tenet)',
      'generalicp'
    ],
    legend: {
      position: 'bottom',
      labels: {
        colors: ['#fff']
      }
    },
    dataLabels: {
      enabled: true,
      textAnchor: 'middle'
    }
  }

  const PatternedStackedBarOptions = {
    series: [
      {
        name: 'HIGH',
        data: [44, 55, 41, 37, 22, 43, 21, 20, 20, 20],
        color: '#EC726E'
      },
      {
        name: 'MEDIUM',
        data: [44, 55, 41, 37, 22, 43, 21, 20, 20, 20],
        color: '#68C2DF'
      },
      {
        name: 'LOW',
        data: [44, 55, 41, 37, 22, 43, 21, 20, 20, 20],
        color: '#F0B05D'
      }
    ],
    chart: {
      type: 'bar',
      height: 350,
      stacked: true,
      dropShadow: {
        enabled: true,
        blur: 0,
        opacity: 0.5
      }
    },
    plotOptions: {
      bar: {
        horizontal: true,
        barHeight: '60%'
      }
    },
    dataLabels: {
      enabled: false
    },
    stroke: {
      width: 1,
      colors: ['#fff']
    },
    // title: {
    //   text: 'Fiction Books Sales'
    // },
    xaxis: {
      // title: {
      //   text: 'No of Vulnerability',
      //   style: {
      //     color: '#fff',
      //   },
      // },
      categories: [
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01',
        '192.168.100.01'
      ],
      labels: {
        formatter: function (val) {
          return val + 'K'
        },
        style: {
          colors: ['#fff']
        }
      }
    },
    yaxis: {
      title: {
        text: undefined
      },
      labels: {
        formatter: function (val) {
          return val
        },
        style: {
          colors: ['#fff']
        }
      }
    },
    tooltip: {
      y: {
        formatter: function (val) {
          return val + 'K'
        }
      }
    },
    fill: {
      type: 'pattern',
      opacity: 1,
      pattern: {
        style: ['verticalLines', 'slantedLines', 'squares'],
        width: 6,
        strokeWidth: 2
      }
    },
    states: {
      hover: {
        filter: 'none'
      }
    },
    legend: {
      position: 'top',
      horizontalAlign: 'right',
      floating: true,
      offsetX: -10,
      offsetY: 0,
      markers: {
        radius: 15
      },
      labels: {
        colors: ['#fff']
      }
    },
    grid: {
      show: true,
      position: 'back',
      borderColor: '#9e9e9e',
      xaxis: {
        lines: {
          show: true
        }
      }
    },
    responsive: [
      {
        breakpoint: 1500,
        options: {
          chart: {
            width: 580,
            height: 300
          },
          stroke: {
            show: true,
            width: 1,
            curve: 'smooth'
          },
          markers: {
            size: [5, 5, 5],
            // colors: ['#EC726E', '#68C2DF', '#F0B05D'],
            shape: 'circle',
            strokeColors: ['#EC726E', '#68C2DF', '#F0B05D'],
            showNullDataPoints: true,
            hover: {
              size: 6,
              sizeOffset: 8
            }
          }
        }
      }
    ]
  }

  const PolarAreaChart = {
    series: [23, 25, 22, 25, 21, 17, 15, 25, 13, 25],
    colors: ['#DB5DF0', '#5D86F0', '#5DF06C', '#EC726E', '#F0B05D', '#9FCFBF', '#195887', '#8C5DF0', '#5DF0CD', '#F0E15D'],
    chart: {
      type: 'polarArea'
    },
    stroke: {
      width: 1,
      colors: ['#fff']
    },
    fill: {
      opacity: 1
    },
    responsive: [
      {
        breakpoint: 1900,
        options: {
          chart: {
            width: 450,
            height: 300
          },
          legend: {
            position: 'bottom',
            color: '#fff',
            fontSize: '9px'
          }
        }
      },
      {
        breakpoint: 1500,
        options: {
          chart: {
            width: 300,
            height: 270
          },
          legend: {
            position: 'bottom',
            color: '#fff',
            fontSize: '10px'
          }
        }
      },
      {
        breakpoint: 480,
        options: {
          chart: {
            width: 200
          },
          legend: {
            position: 'bottom',
            color: '#fff'
          }
        }
      }
    ],
    labels: [
      'HTTP Security Headers Detection',
      'HTTP Server Banner Enumeration',
      'HTTP Server type and version',
      'Services',
      'SSL/TLS: Gertfcate Too Long Vaid ....',
      '',
      'SSUTLS: Certfcate Signed Using ....',
      'SSUTLS: Gertfcato - Subject  ....',
      'Sophos Cyberoam UMT/NGFW .....',
      'CGI Scanning Consolidation'
    ],
    legend: {
      position: 'bottom',
      labels: {
        colors: ['#fff']
      }
    }
  }

  function handleClick() {
    setShowDetails(!showdetails)
  }

  return (
    <Wrapper>
      <Sidebar />

      <div className='mx-6 mt-5'>
        <Navbar />

        <Grid container spacing={2}>
          <Grid item xs={12} sm={12} md={12} lg={3}>
            <div className='bg-[#2D3347]  w-[386px]  xl:w-[300px]  3xl:w-[700px] 3xl:h-[700px] 3lg:w-[385px] 3lg:h-[340px]'>
              <div className='relative p-2.5 mb-2.5 bg-[#24272B]'>
                <h3 className='leading-[16.8px] m-0 text-[#E3E3E3] text-sm font-bold'>Severity Wise Summary</h3>
              </div>
              <ReactApexChart options={RadialBarOptions} series={RadialBarOptions.series} onClick={handleClick} type='radialBar' />
              <BottomNavigation showLabels>
                <BottomNavigationAction label='HIGH-15' style={{ background: '#EC726E' }} className='font-bold text-sm' />
                <BottomNavigationAction label='MEDIUM-30' style={{ background: '#68C2DF' }} className='font-bold text-sm' />
                <BottomNavigationAction label='LOW-55' style={{ background: '#F0B05D' }} className='font-bold text-sm' />
              </BottomNavigation>
            </div>
          </Grid>

          <Grid item xs={12} sm={12} md={12} lg={4}>
            <div className='bg-[#2D3347]  w-[597px] h-[414px] xl:w-[440px] 3xl:w-[1000px] 3xl:h-[700px] 3lg:w-[590px] 3lg:h-[340px]'>
              <div className='relative p-2.5 mb-2.5 bg-[#24272B]'>
                <h3 className='leading-[16.8px] m-0 text-[#E3E3E3] text-sm font-bold'>Port Wise Vulnerability</h3>
              </div>
              <ReactApexChart options={StackedBarOptions} series={StackedBarOptions.series} type='bar' />
            </div>
          </Grid>

          <Grid item xs={12} sm={12} md={12} lg={5}>
            <div className='bg-[#2D3347]  w-[597px] h-[414px] xl:w-[440px] 3xl:w-[1000px] 3xl:h-[700px] 3lg:w-[590px] 3lg:h-[340px] float-right'>
              <div className='relative p-2.5 mb-2.5 bg-[#24272B]'>
                <h3 className='leading-[16.8px] m-0 text-[#E3E3E3] text-sm font-bold'>Port Wise Vulnerability</h3>
              </div>
              <ReactApexChart options={LineWithDataLabel} series={LineWithDataLabel.series} type='line' />
            </div>
          </Grid>

          <Grid item xs={12} sm={12} md={12} lg={12} className='flext content-center items-center '>
            {showdetails && <ChartDetail />}
          </Grid>

          <Grid item xs={12} sm={12} md={12} lg={3}>
            <div className='bg-[#2D3347]  w-[386px] h-[414px] xl:w-[300px] xl:h-[350px] 3xl:w-[700px] 3xl:h-[700px] 3lg:w-[400px] 3lg:h-[350px]'>
              <div className='relative flex p-2.5 mb-2.5 bg-[#24272B]'>
                <div>
                  <h3 className='leading-[16.8px] m-0 text-[#E3E3E3] text-sm font-bold'>Top 10 Vulnerability Wise Summary</h3>
                </div>
                <div>
                  <h3 className='leading-[16.8px] m-0 text-[#E3E3E3] text-sm font-bold'>Top 10 Vulnerability Wise Summary</h3>
                </div>
                <div>
                  <h3 className='leading-[16.8px] m-0 text-[#E3E3E3] text-sm font-bold'>IP: 192.168.100.01</h3>
                </div>
              </div>
              <ReactApexChart options={PolarAreaChart} series={PolarAreaChart.series} type='polarArea' />
            </div>
          </Grid>

          <Grid item xs={12} sm={12} md={12} lg={6}>
            <div className='bg-[#2D3347]  w-[800px] h-[414px] xl:w-[585px] xl:h-[350px] 3xl:w-[1200px] 3xl:h-[700px]'>
              <div className='relative flex p-2.5 mb-2.5 bg-[#24272B]'>
                <h3 className='leading-[16.8px] m-0 text-[#E3E3E3] text-sm font-bold'>Top 10 Port Wise Vulnerability</h3>
              </div>
              <ReactApexChart
                options={PatternedStackedBarOptions}
                series={PatternedStackedBarOptions.series}
                type='bar'
                width='100%'
                height={370}
              />
            </div>
          </Grid>

          <Grid item xs={12} sm={12} md={12} lg={3}>
            <div className='bg-[#2D3347]  w-[386px] h-[404px] xl:w-[300px] xl:h-[350px] 3xl:w-[700px] 3xl:h-[700px] float-right'>
              <div className='relative flex p-2.5 mb-2.5 bg-[#24272B]'>
                <div>
                  <h3 className='leading-[16.8px] m-0 text-[#E3E3E3] text-sm font-bold'>Top 10 Port Wise Summary</h3>
                </div>
                <div>
                  <h3 className='leading-[16.8px] m-0 text-[#E3E3E3] text-sm font-bold'>IP: 192.168.100.01</h3>
                </div>
              </div>
              <ReactApexChart options={PieChart} series={PieChart.series} type='pie' />
            </div>
          </Grid>
        </Grid>
      </div>
    </Wrapper>
  )
}

export default VulnerabilityDashboard
